apiVersion: v1
kind: Template
metadata:
  name: cloudwatch-aggregator
parameters:
- name: CLOUD_WATCH_ALLOWED_STREAMS
  value: 3scale,3scale-dev,3scale-staging
- name: REPLICAS
  value: "1"
- name: IMAGE_TAG
  required: true
- name: IMAGE
  value: quay.io/cloudservices/cloudwatch-aggregator
  required: true
- name: MEMORY_LIMIT
  value: 750Mi
  required: true
- name: MEMORY_REQUEST
  value: 250Mi
  required: true
- name: CPU_LIMIT
  value: 500m
  required: true
- name: CPU_REQUEST
  value: 100m
  required: true
- description: Value for FLASK_ENV
  name: FLASK_ENV
  value: production
  required: true
- description: Port number
  name: PUBLIC_PORT
  value: "5000"
  required: true
- description: Flag to enable logging to Splunk
  name: LOG_TO_SPLUNK
  value: "false"
- description: Flag to enable logging to CloudWatch
  name: LOG_TO_CLOUDWATCH
  value: "false"
- description: Splunk instance host
  name: SPLUNK_HOST
- description: Splunk host port
  name: SPLUNK_PORT
- description: Splunk log index
  name: SPLUNK_INDEX
  value: "main"
- description: Flag to have Splunk wait when the queue is full (if false it will drop logs)
  name: SPLUNK_WAIT_ON_QUEUE
  value: "true"
- description: Flag to format Splunk logs as JSON
  name: SPLUNK_FORMAT_JSON
  value: "true"
- description: Flag to enable Splunk debug logs
  name: SPLUNK_DEBUG
  value: "false"
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      email: platform-accessmanagement@redhat.com
    labels:
      app: cloudwatch-aggregator
      owner: platform-accessmanagement
    name: cloudwatch-aggregator
  spec:
    replicas: ${{REPLICAS}}
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: cloudwatch-aggregator
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cloudwatch-aggregator
          deploymentconfig: cloudwatch-aggregator
      spec:
        serviceAccountName: cloudwatch-aggregator
        securityContext:
          runAsNonRoot: true
        containers:
        - env:
          - name: LOG_TO_SPLUNK
            value: ${LOG_TO_SPLUNK}
          - name: LOG_TO_CLOUDWATCH
            value: ${LOG_TO_CLOUDWATCH}
          - name: SPLUNK_HOST
            value: ${SPLUNK_HOST}
          - name: SPLUNK_PORT
            value: ${SPLUNK_PORT}
          - name: SPLUNK_INDEX
            value: ${SPLUNK_INDEX}
          - name: SPLUNK_WAIT_ON_QUEUE
            value: ${SPLUNK_WAIT_ON_QUEUE}
          - name: SPLUNK_FORMAT_JSON
            value: ${SPLUNK_FORMAT_JSON}
          - name: SPLUNK_DEBUG
            value: ${SPLUNK_DEBUG}
          - name: SPLUNK_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: splunk
                optional: true
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: aws_access_key_id
                name: cloudwatch
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: aws_secret_access_key
                name: cloudwatch
          - name: AWS_LOG_GROUP
            valueFrom:
              secretKeyRef:
                key: log_group_name
                name: cloudwatch
          - name: AWS_REGION_NAME
            valueFrom:
              secretKeyRef:
                key: aws_region
                name: cloudwatch
          - name: CLOUD_WATCH_ALLOWED_STREAMS
            value: ${CLOUD_WATCH_ALLOWED_STREAMS}
          - name: FLASK_ENV
            value: "${FLASK_ENV}"
          - name: PUBLIC_PORT
            value: ${PUBLIC_PORT}
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: cwa
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: cloudwatch-aggregator
          ports:
          - containerPort: 5000
            name: cwa
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: cwa
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: quay-cloudservices-pull
        - name: rh-registry-pull
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: cloudwatch-aggregator
    name: cloudwatch-aggregator
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 5000
    selector:
      app: cloudwatch-aggregator
      deploymentconfig: cloudwatch-aggregator
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: cloudwatch-aggregator
